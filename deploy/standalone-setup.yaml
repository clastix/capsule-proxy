---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ns-filter
  namespace: capsule-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    run: ns-filter
  name: ns-filter
rules:
  - apiGroups: ["authentication.k8s.io"]
    resources: ["tokenreviews"]
    verbs: ["create"]
  - apiGroups: ["capsule.clastix.io"]
    resources: ["tenants"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ns-filter
  labels:
    run: ns-filter
subjects:
- kind: ServiceAccount
  name: ns-filter
  namespace: capsule-system
roleRef:
  kind: ClusterRole
  name: ns-filter
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: ns-filter
  name: ns-filter
  namespace: capsule-system
spec:
  replicas: 1
  selector:
    matchLabels:
      run: ns-filter
  template:
    metadata:
      labels:
        run: ns-filter
    spec:
      restartPolicy: Always
      serviceAccountName: ns-filter
      hostNetwork: false
      volumes:
      - configMap:
          defaultMode: 420
          name: certs
        name: certs
      containers:
      - name: ns-filter
        image: quay.io/clastix/capsule-ns-filter
        imagePullPolicy: IfNotPresent 
        command:
        - /capsule-ns-filter
        - --k8s-control-plane-url=https://kubernetes.default.svc
        - --capsule-user-group=capsule.clastix.io
        - --zap-log-level=5
        - --enable-ssl=true
        - --ssl-cert-path=/opt/certs/tls.crt
        - --ssl-key-path=/opt/certs/tls.key
        ports:
        - containerPort: 9001
          name: proxy
          protocol: TCP
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8081
          name: probe
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz/
            port: probe
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /healthz/
            port: probe
            scheme: HTTP
        resources:
        volumeMounts:
        - mountPath: /opt/certs
          name: certs
---
apiVersion: v1
kind: Service
metadata:
  name: ns-filter
  namespace: capsule-system
  labels:
    run: ns-filter
spec:
  ports:
  - protocol: TCP
    port: 9001
    targetPort: 9001
  selector:
    run: ns-filter
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: capsule-system
  name: ns-filter
  labels:
    run: ns-filter
  annotations:
    ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  rules:
  - host: kube.clastix.io
    http:
      paths:
      - path: /
        backend:
          serviceName: ns-filter
          servicePort: 9001
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: certs
  namespace: capsule-system
data:
  tls.crt: REDACTED
  tls.key: REDACTED
